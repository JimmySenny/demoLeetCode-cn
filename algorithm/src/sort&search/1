#!/usr/bin/env python3
# -*- coding:utf-8 -*-

class Solution:
    #def search(self, nums: List[int], target: int) -> int:
    def search(self, nums, target):
        return self.binarySearch(target, nums, 0, len(nums) - 1)
    def binarySearch(self, target, nums, left, right):
        while left <= right:
            mid = (left + right) // 2
            print("l,r,m:",left, right, mid, nums[mid])

            if target == nums[mid]:
                return mid;

            if nums[mid] > target:
                self.binarySearch(target, nums, left, mid-1)
            elif nums[mid] < target:
                self.binarySearch(target, nums, mid+1, right)
            elif nums[left] > target or nums[right] < target:
                return -1

def main():
    s = Solution()

    nums = [-1,0,3,5,9,12]
    target = 9

    print(s.search(nums, target))

if __name__ == '__main__':
    main()
